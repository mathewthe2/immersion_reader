name: Build & Release APK on pubspec.yaml Change

on:
  push:
    paths:
      - 'pubspec.yaml'

env:
  FLUTTER_VERSION: '3.27.1'

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Set up pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install and build with pnpm
      - name: Install and build web resources
        working-directory: resources/ebook-reader/apps/web
        run: |
          pnpm install
          pnpm build

      # Copy build output to Flutter assets
      - name: Copy web build to Flutter assets
        run: cp -r resources/ebook-reader/apps/web/build/ assets/ttu-ebook-reader/

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.FLUTTER_VERSION }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install
          cd ..

      - name: Install dependencies
        run: |
          flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build IPA
        run: flutter build ipa --no-codesign

      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ steps.get_version.outputs.VERSION }}"
          name: "Release v${{ steps.get_version.outputs.VERSION }}"

      - name: Upload IPA to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/ios/ipa/Runner.ipa
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ steps.get_version.outputs.VERSION }}"
          name: "Release v${{ steps.get_version.outputs.VERSION }}"
